/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.migestion.ui.swing.cajas.panel;

import java.awt.Color;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Vector;

import javax.swing.JComponent;

import com.migestion.model.Caja;
import com.migestion.model.Sucursal;
import com.migestion.model.Vendedor;
import com.migestion.swing.controller.exception.ControllerException;
import com.migestion.swing.custom.ComboModel;
import com.migestion.swing.model.UICollection;
import com.migestion.swing.navigation.listeners.LinkFindObjectListener;
import com.migestion.swing.view.dialogs.adapters.IDialogAddAdapter;
import com.migestion.swing.view.dialogs.adapters.IDialogDeleteAdapter;
import com.migestion.swing.view.dialogs.adapters.IDialogUpdateAdapter;
import com.migestion.swing.view.dialogs.adapters.IDialogViewAdapter;
import com.migestion.swing.view.exceptions.ViewException;
import com.migestion.swing.view.inputs.InputFloatValidator;
import com.migestion.swing.view.inputs.InputRequiredValidator;
import com.migestion.swing.view.inputs.InputValidator;
import com.migestion.swing.view.inputs.JComboBoxInspector;
import com.migestion.swing.view.inputs.JDateChooserInspector;
import com.migestion.swing.view.inputs.JFindObjectInspector;
import com.migestion.swing.view.inputs.JTextFieldInspector;
import com.migestion.ui.context.AppContext;
import com.migestion.ui.criteria.UISucursalCriteria;
import com.migestion.ui.service.UIServiceFactory;
import com.migestion.ui.swing.finder.FinderFactory;
import com.migestion.ui.swing.i18n.I18nMessages;
import com.migestion.ui.swing.skin.ISkinForm;
import com.migestion.ui.swing.skin.SkinDecorator;

/**
 *
 * @author bernardo
 */
public class CajaPanel extends javax.swing.JPanel implements ISkinForm,Serializable, IDialogAddAdapter, IDialogUpdateAdapter, IDialogViewAdapter, IDialogDeleteAdapter{

	private Caja caja;
    private InputRequiredValidator required;
    private InputFloatValidator floatFormat;
	
    /**
     * Creates new form CajaPanel
     */
    public CajaPanel() {
    	
    	initCaja();
    	
        initComponents();
        
        Dimension minimumSize = new Dimension(500, 400);
 		setMinimumSize(minimumSize);
 		
    	initValidators();
         
        SkinDecorator.getInstance().decorate(this);
        
 		loadCombos();
 		
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        lblFecha = new javax.swing.JLabel();
        pickerFecha = new com.toedter.calendar.JDateChooser();
        lblNumero = new javax.swing.JLabel();
        txtNumero = new javax.swing.JTextField();
        lblSucursal = new javax.swing.JLabel();
        cmbSucursal = new javax.swing.JComboBox();
        lblCajero = new javax.swing.JLabel();
        findVendedor = FinderFactory.getFindVendedor(new LinkFindObjectListener() {

            public void objectFound(Object objectFinded) {

                caja.setCajero( (Vendedor) objectFinded);
            }
        });
        lblSaldoInicial = new javax.swing.JLabel();
        txtSaldoInicial = new javax.swing.JTextField();

        setLayout(new java.awt.GridBagLayout());

        lblFecha.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblFecha.setText("Fecha");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(lblFecha, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(pickerFecha, gridBagConstraints);

        lblNumero.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblNumero.setText("NÃºmero");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(lblNumero, gridBagConstraints);

        txtNumero.setText("jTextField1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(txtNumero, gridBagConstraints);

        lblSucursal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSucursal.setText("Sucursal");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(lblSucursal, gridBagConstraints);

        cmbSucursal.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(cmbSucursal, gridBagConstraints);

        lblCajero.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCajero.setText("Cajero");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(lblCajero, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(findVendedor, gridBagConstraints);

        lblSaldoInicial.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSaldoInicial.setText("Saldo inicial");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(lblSaldoInicial, gridBagConstraints);

        txtSaldoInicial.setText("jTextField1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(txtSaldoInicial, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmbSucursal;
    private com.migestion.swing.custom.JFindObjectPanel findVendedor;
    private javax.swing.JLabel lblCajero;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JLabel lblNumero;
    private javax.swing.JLabel lblSaldoInicial;
    private javax.swing.JLabel lblSucursal;
    private com.toedter.calendar.JDateChooser pickerFecha;
    private javax.swing.JTextField txtNumero;
    private javax.swing.JTextField txtSaldoInicial;
    // End of variables declaration//GEN-END:variables


    public Container getDeleteMsgPanel() {
		
		this.setEditable( false );
		
		return this;
	}

	public Container getViewPanel() {
		
		this.setEditable( false );
		
		return this;
	}
	
	public void setEditable( Boolean editable ){
		
		txtNumero.setEditable( false );
		txtSaldoInicial.setEditable( false );
		findVendedor.setEditable( false );
		pickerFecha.setEnabled( false );
		cmbSucursal.setEditable( false );
	}

	public void showObject(Object object) {
		
		caja = (Caja)object;
		
		txtNumero.setText( caja.getNumero() );
		txtSaldoInicial.setText( caja.getSaldoInicial().toString() );
		findVendedor.objectFound( caja.getCajero() );
		pickerFecha.setDate( caja.getFecha() );
		cmbSucursal.setSelectedItem( caja.getSucursal() );
		
		
	}

	public Container getInputPanel() {
		return this;
	}

	public Object getObjectFromUI() throws ViewException {
		
		caja.setNumero( txtNumero.getText() );
		
		if(txtSaldoInicial.getText().length()>0)
			caja.setSaldoInicial( new Float(txtSaldoInicial.getText()) );
		
		else
			caja.setSaldoInicial(null);

		caja.setFecha( pickerFecha.getDate() );
		caja.setSucursal( (Sucursal)cmbSucursal.getSelectedItem() );
		return caja;
	}

	private void initValidators() {
		
		required = new InputRequiredValidator(); 
		required.put(lblNumero, txtNumero, new JTextFieldInspector());
		required.put(lblSaldoInicial, txtSaldoInicial, new JTextFieldInspector());
		required.put(lblSucursal, cmbSucursal, new JComboBoxInspector());
		required.put(lblCajero, findVendedor, new JFindObjectInspector());
		required.put(lblFecha, pickerFecha, new JDateChooserInspector());
		required.setMessage(I18nMessages.INGRESE_REQUERIDOS);
		required.initialize();
		
		floatFormat = new InputFloatValidator();
		floatFormat.put(lblSaldoInicial, txtSaldoInicial, new JTextFieldInspector());
		floatFormat.setMessage(I18nMessages.FORMATO_FLOAT_INVALIDO);
		floatFormat.initialize();
		
	}

	
	public List<InputValidator> getValidators() {
		
		List<InputValidator> validators = new ArrayList<InputValidator>();
		
		validators.add( required );
		validators.add( floatFormat );
		
		return validators;
	}

	public void clearInputs() {
		txtNumero.setText( "" );
		txtSaldoInicial.setText( "" );
		findVendedor.objectFound( null );
		pickerFecha.setDate( new Date() );
		cmbSucursal.setSelectedIndex( 0 );
		
		
	}

	private void initCaja() {
		this.caja = new Caja();
	}

	public List<JComponent> getFormLabels(){
		
		List<JComponent> labels = new Vector<JComponent>();
		labels.add(lblNumero);
		labels.add(lblCajero);
		labels.add(lblFecha);
		labels.add(lblSucursal);
		labels.add(lblSaldoInicial);
		
		return labels;
	}
	
	public List<JComponent> getFormInputs(){
		
		List<JComponent> inputs = new Vector<JComponent>();
		inputs.add(txtNumero);
		inputs.add(pickerFecha);
		inputs.add(txtSaldoInicial);
		inputs.add(findVendedor);
		inputs.add(cmbSucursal);
		
		return inputs;
	}
	

	public void setPadding(JComponent component, Insets padding) {
		GridBagConstraints gbc = ((GridBagLayout)getLayout()).getConstraints(component);
		gbc.insets = padding;
		remove(component);
		add(component, gbc);
	}

	public void setFormBackground(Color bg) {
		this.setBackground(bg);
	}

	public void loadCombos(){
		try {

			UICollection sucursales = UIServiceFactory.getUISucursalService().list(new UISucursalCriteria());
			ComboModel model = new ComboModel();
	        model.setElementos(sucursales.getElements());
	        cmbSucursal.setModel(model);
	        cmbSucursal.setSelectedItem( AppContext.getInstance().getSucursalDefault() );
	        
		} catch (ControllerException e) {
			e.printStackTrace();
		}
        

	}

}