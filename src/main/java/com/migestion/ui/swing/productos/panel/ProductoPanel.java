/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.migestion.ui.swing.productos.panel;

import java.awt.Color;
import java.awt.Container;
import java.awt.Insets;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;

import javax.swing.JComponent;

import com.migestion.model.CategoriaProducto;
import com.migestion.model.Producto;
import com.migestion.swing.navigation.listeners.LinkFindObjectListener;
import com.migestion.swing.view.dialogs.adapters.IDialogAddAdapter;
import com.migestion.swing.view.dialogs.adapters.IDialogDeleteAdapter;
import com.migestion.swing.view.dialogs.adapters.IDialogUpdateAdapter;
import com.migestion.swing.view.dialogs.adapters.IDialogViewAdapter;
import com.migestion.swing.view.exceptions.ViewException;
import com.migestion.swing.view.inputs.InputFloatValidator;
import com.migestion.swing.view.inputs.InputIntegerValidator;
import com.migestion.swing.view.inputs.InputRequiredValidator;
import com.migestion.swing.view.inputs.InputValidator;
import com.migestion.swing.view.inputs.JFindObjectInspector;
import com.migestion.swing.view.inputs.JTextFieldInspector;
import com.migestion.ui.context.AppContext;
import com.migestion.ui.swing.finder.FinderFactory;
import com.migestion.ui.swing.i18n.I18nMessages;
import com.migestion.ui.swing.skin.ISkinForm;

/**
 *
 * @author bernardo
 */
public class ProductoPanel extends javax.swing.JPanel implements ISkinForm,Serializable, IDialogAddAdapter, IDialogUpdateAdapter, IDialogViewAdapter, IDialogDeleteAdapter{

	
	private Producto producto;
    private InputRequiredValidator required;
    private InputFloatValidator floatFormat;
    private InputIntegerValidator integerFormat;
	
    /**
     * Creates new form ProductoPanel2
     */
    public ProductoPanel() {
    	
    	initProducto();
    	
        initComponents();
        
		initValidators();

//      Dimension minimumSize = new Dimension(700, 300);
//		setMinimumSize(minimumSize);
//		
//		SkinDecorator.getInstance().decorate(this);

    }

    

	/**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblNombre = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        lblDescripcion = new javax.swing.JLabel();
        txtDescripcion = new javax.swing.JTextField();
        lblPrecio = new javax.swing.JLabel();
        txtPrecio = new javax.swing.JFormattedTextField();
        lblIva = new javax.swing.JLabel();
        txtIva = new javax.swing.JFormattedTextField();
        lblStock = new javax.swing.JLabel();
        txtStock = new javax.swing.JFormattedTextField();
        lblStockMinimo = new javax.swing.JLabel();
        txtStockMinimo = new javax.swing.JFormattedTextField();
        lblStockMaximo = new javax.swing.JLabel();
        txtStockMaximo = new javax.swing.JFormattedTextField();
        lblCodigoBarras = new javax.swing.JLabel();
        txtCodigoBarras = new javax.swing.JTextField();
        lblObservaciones = new javax.swing.JLabel();
        scrollObservaciones = new javax.swing.JScrollPane();
        txtObservaciones = new javax.swing.JTextArea();
        lblCategoria = new javax.swing.JLabel();
        findCategoria = FinderFactory.getFindCategoriaProducto( new LinkFindObjectListener() {

            public void objectFound(Object objectFinded) {
                if( objectFinded != null ){
                    producto.setCategoria((CategoriaProducto)objectFinded);
                }
            }
        });

        lblNombre.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblNombre.setText("Nombre");

        txtNombre.setText("jTextField1");

        lblDescripcion.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblDescripcion.setText("Descripción");

        txtDescripcion.setText("jTextField1");

        lblPrecio.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblPrecio.setText("Precio");

        txtPrecio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        txtPrecio.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        lblIva.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblIva.setText("Iva");

        txtIva.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        txtIva.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        lblStock.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblStock.setText("Stock");

        txtStock.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        txtStock.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        lblStockMinimo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblStockMinimo.setText("Mínimo");

        txtStockMinimo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        txtStockMinimo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        lblStockMaximo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblStockMaximo.setText("Máximo");

        txtStockMaximo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        txtStockMaximo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        lblCodigoBarras.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCodigoBarras.setText("Código de barras");

        txtCodigoBarras.setText("jTextField1");

        lblObservaciones.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblObservaciones.setText("Observaciones");

        txtObservaciones.setColumns(20);
        txtObservaciones.setRows(5);
        scrollObservaciones.setViewportView(txtObservaciones);

        lblCategoria.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCategoria.setText("Categoría");

        findCategoria.objectFound( AppContext.getInstance().getCategoriaProductoDefault());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblStock, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDescripcion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNombre, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCodigoBarras, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPrecio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDescripcion)
                            .addComponent(txtNombre)
                            .addComponent(scrollObservaciones)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtStock, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblStockMinimo))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblIva, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtStockMinimo, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                                    .addComponent(txtIva))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblStockMaximo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtStockMaximo, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(txtCodigoBarras)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblObservaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(findCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 492, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombre)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDescripcion)
                    .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPrecio)
                    .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblIva)
                    .addComponent(txtIva, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStock)
                    .addComponent(txtStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblStockMinimo)
                    .addComponent(txtStockMinimo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblStockMaximo)
                    .addComponent(txtStockMaximo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCodigoBarras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCodigoBarras))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblObservaciones)
                    .addComponent(scrollObservaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblCategoria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(findCategoria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(22, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.migestion.swing.custom.JFindObjectPanel findCategoria;
    private javax.swing.JLabel lblCategoria;
    private javax.swing.JLabel lblCodigoBarras;
    private javax.swing.JLabel lblDescripcion;
    private javax.swing.JLabel lblIva;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblObservaciones;
    private javax.swing.JLabel lblPrecio;
    private javax.swing.JLabel lblStock;
    private javax.swing.JLabel lblStockMaximo;
    private javax.swing.JLabel lblStockMinimo;
    private javax.swing.JScrollPane scrollObservaciones;
    private javax.swing.JTextField txtCodigoBarras;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JFormattedTextField txtIva;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextArea txtObservaciones;
    private javax.swing.JFormattedTextField txtPrecio;
    private javax.swing.JFormattedTextField txtStock;
    private javax.swing.JFormattedTextField txtStockMaximo;
    private javax.swing.JFormattedTextField txtStockMinimo;
    // End of variables declaration//GEN-END:variables


	private void initProducto() {
		
		this.producto = new Producto();
		this.producto.setCategoria(AppContext.getInstance().getCategoriaProductoDefault());
		
	}



	public Container getDeleteMsgPanel() {
		
		this.setEditable( false );
		
		return this;
	}

	public Container getViewPanel() {
		
		this.setEditable( false );
		
		return this;
	}
	
	public void setEditable( Boolean editable ){
		
		txtNombre.setEditable( false );
		txtDescripcion.setEditable( false );
		txtObservaciones.setEditable( false );
		txtCodigoBarras.setEditable( false );
		txtIva.setEditable( false );
		txtPrecio.setEditable( false );
		txtStock.setEditable( false );
		txtStockMaximo.setEditable( false );
		txtStockMinimo.setEditable( false );
		findCategoria.setEditable(false);
		
	}

	public void showObject(Object object) {
		
		producto = (Producto)object;
		txtNombre.setText( producto.getNombre() );
		txtDescripcion.setText( producto.getDescripcion() );
		txtObservaciones.setText( producto.getObservaciones() );
		txtCodigoBarras.setText( producto.getCodigoBarras() );
		
		if( producto.getPrecio()!=null)
			txtPrecio.setValue( producto.getPrecio() );
		
		if( producto.getIva()!=null)
			txtIva.setValue( producto.getIva() );
		
		if( producto.getStockActual()!=null)
			txtStock.setValue( producto.getStockActual() );
		
		if( producto.getStockMinimo()!=null)
			txtStockMinimo.setValue( producto.getStockMinimo() );
		
		if( producto.getStockMaximo()!=null)
			txtStockMaximo.setValue( producto.getStockMaximo() );
		
		
		findCategoria.objectFound( producto.getCategoria() );
	}

	public Container getInputPanel() {
		return this;
	}

	public Object getObjectFromUI() throws ViewException {
		
		producto.setNombre( txtNombre.getText() );
		producto.setDescripcion( txtDescripcion.getText() );
		producto.setObservaciones( txtObservaciones.getText() );
		producto.setCodigoBarras( txtCodigoBarras.getText() );
		
		//TODO chequear que sea un número.
		if(txtPrecio.getText().length()>0)
			producto.setPrecio( ((Number)txtPrecio.getValue()).floatValue() );
		else
			producto.setPrecio(null);
		
		if(txtIva.getText().length()>0)
			producto.setIva( ((Number)txtIva.getValue()).floatValue() );
		else
			producto.setIva(null);

		//TODO chequear que sea un número.
		if(txtStock.getText().length()>0)
			producto.setStockActual(new Integer(txtStock.getText()) );
		else
			producto.setStockActual(null);

		//TODO chequear que sea un número.
		if(txtStockMinimo.getText().length()>0)
			producto.setStockMinimo(new Integer(txtStockMinimo.getText()) );
		else
			producto.setStockMinimo(null);
		
		//TODO chequear que sea un número.
		if(txtStockMaximo.getText().length()>0)
			producto.setStockMaximo(new Integer(txtStockMaximo.getText()) );
		else
			producto.setStockMaximo(null);
		
		return producto;
	}

	private void initValidators() {
		
		required = new InputRequiredValidator(); 
		required.put(lblNombre, txtNombre, new JTextFieldInspector());
		required.put(lblPrecio, txtPrecio, new JTextFieldInspector());
		required.put(lblIva, txtIva, new JTextFieldInspector());
		required.put(lblCategoria, findCategoria, new JFindObjectInspector());
		required.setMessage(I18nMessages.INGRESE_REQUERIDOS);
		required.initialize();
		
		floatFormat = new InputFloatValidator();
		floatFormat.put(lblPrecio, txtPrecio, new JTextFieldInspector());
		floatFormat.put(lblIva, txtIva, new JTextFieldInspector());
		floatFormat.setMessage(I18nMessages.FORMATO_FLOAT_INVALIDO);
		floatFormat.initialize();
		
		integerFormat = new InputIntegerValidator();
		integerFormat.put(lblStock, txtStock, new JTextFieldInspector());
		integerFormat.put(lblStockMinimo, txtStockMinimo, new JTextFieldInspector());
		integerFormat.put(lblStockMaximo, txtStockMaximo, new JTextFieldInspector());
		integerFormat.setMessage(I18nMessages.FORMATO_INTEGER_INVALIDO);
		integerFormat.initialize();

	}

	
	public List<InputValidator> getValidators() {
		
		List<InputValidator> validators = new ArrayList<InputValidator>();
		
		validators.add( required );
		validators.add( floatFormat );
		validators.add( integerFormat );
		
		return validators;
	}

	public void clearInputs() {
		initProducto();
		txtNombre.setText( "" );
		txtIva.setValue( 21F );
		txtDescripcion.setText( "" );
		txtPrecio.setText( "" );
		txtObservaciones.setText( "" );
		txtCodigoBarras.setText( "" );
		txtStock.setText( "" );
		txtStockMaximo.setText( "" );
		txtStockMinimo.setText( "" );
		findCategoria.objectFound( AppContext.getInstance().getCategoriaProductoDefault());
	}

	public List<JComponent> getFormLabels(){
		
		List<JComponent> labels = new Vector<JComponent>();
		labels.add(lblNombre);
		labels.add(lblDescripcion);
		labels.add(lblCategoria);
		labels.add(lblIva);
		labels.add(lblObservaciones);
		labels.add(lblCodigoBarras);
		labels.add(lblPrecio);
		labels.add(lblStock);
		labels.add(lblStockMinimo);
		labels.add(lblStockMaximo);
		
		return labels;
	}
	
	public List<JComponent> getFormInputs(){
		
		List<JComponent> inputs = new Vector<JComponent>();
		inputs.add(txtNombre);
		inputs.add(txtDescripcion);
		inputs.add(findCategoria);
		inputs.add(txtIva);
		inputs.add(txtObservaciones);
		inputs.add(txtCodigoBarras);
		inputs.add(txtPrecio);
		inputs.add(txtStock);
		inputs.add(txtStockMinimo);
		inputs.add(txtStockMaximo);
		
		return inputs;
	}
	

	public void setPadding(JComponent component, Insets padding) {
//		GridBagConstraints gbc = gridBagLayout.getConstraints(component);
//		gbc.insets = padding;
//		remove(component);
//		add(component, gbc);
	}

	public void setFormBackground(Color bg) {
		this.setBackground(bg);
	}

}
